trigger:
  branches:
    include:
      - '*'

pr: none

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
    - repository: azure-api-client
      type: github
      endpoint: keboola
      name: keboola/azure-api-client
    - repository: input-mapping
      type: github
      endpoint: keboola
      name: keboola/input-mapping
    - repository: k8s-client
      type: github
      endpoint: keboola
      name: keboola/k8s-client
    - repository: logging-bundle
      type: github
      endpoint: keboola
      name: keboola/logging-bundle
    - repository: staging-provider
      type: github
      endpoint: keboola
      name: keboola/staging-provider
    - repository: output-mapping
      type: github
      endpoint: keboola
      name: keboola/output-mapping
    - repository: permission-checker
      type: github
      endpoint: keboola
      name: keboola/permission-checker
    - repository: configuration-variables-resolver
      type: github
      endpoint: keboola
      name: keboola/configuration-variables-resolver
    - repository: settle
      type: github
      endpoint: keboola
      name: keboola/settle
    - repository: api-bundle
      type: github
      endpoint: keboola
      name: keboola/api-bundle

variables:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

stages:
  - stage: build
    displayName: Build
    dependsOn: []
    jobs:
      - job: checkChanges
        displayName: 'Check changes'
        steps:
          - script: |
              ./bin/ci-find-changes.sh main \
                azureApiClient:libs/azure-api-client \
                inputMapping:libs/input-mapping \
                k8sClient:libs/k8s-client \
                loggingBundle:libs/logging-bundle \
                stagingProvider:libs/staging-provider \
                outputMapping:libs/output-mapping \
                permissionChecker:libs/permission-checker \
                configurationVariablesResolver:libs/configuration-variables-resolver \
                settle:libs/settle \
                apiBundle:libs/api-bundle
            displayName: 'Find changes'
            name: findChanges

      - job: build
        displayName: Build Docker Images
        steps:
          - script: docker-compose --profile ci build
            displayName: Build Docker images

          - script: docker image save $(docker image ls --filter 'reference=keboola/*' --format '{{.Repository}}:latest') -o $(Build.ArtifactStagingDirectory)/docker-images.tar
            displayName: Save images as artifact

          - publish: $(Build.ArtifactStagingDirectory)
            artifact: docker-images
            displayName: Publish artifacts

  - stage: tests_azureApiClient
    displayName: Tests - Azure API Client
    lockBehavior: sequential
    dependsOn: build
    condition: and(succeeded(), dependencies.build.outputs['checkChanges.findChanges.changedProjects_azureApiClient'])
    jobs:
      - template: libs/azure-api-client/azure-pipelines.tests.yml

  - stage: tests_input_mapping
    displayName: Tests - Input Mapping
    lockBehavior: sequential
    dependsOn: build
    condition: and(succeeded(), dependencies.build.outputs['checkChanges.findChanges.changedProjects_inputMapping'])
    jobs:
      - template: libs/input-mapping/azure-pipelines.tests.yml

  - stage: tests_k8sClient
    displayName: Tests - K8S Client
    lockBehavior: sequential
    dependsOn: build
    condition: and(succeeded(), dependencies.build.outputs['checkChanges.findChanges.changedProjects_k8sClient'])
    jobs:
      - template: libs/k8s-client/azure-pipelines.tests.yml

  - stage: tests_loggingBundle
    displayName: Tests - Logging Bundle
    lockBehavior: sequential
    dependsOn: build
    condition: and(succeeded(), dependencies.build.outputs['checkChanges.findChanges.changedProjects_loggingBundle'])
    jobs:
      - template: libs/logging-bundle/azure-pipelines.tests.yml

  - stage: tests_output_mapping
    displayName: Tests - Output Mapping
    lockBehavior: sequential
    dependsOn: build
    condition: and(succeeded(), dependencies.build.outputs['checkChanges.findChanges.changedProjects_outputMapping'])
    jobs:
      - template: libs/output-mapping/azure-pipelines.tests.yml

  - stage: tests_permissionChecker
    displayName: Tests - Permission Checker
    lockBehavior: sequential
    dependsOn: build
    condition: and(succeeded(), dependencies.build.outputs['checkChanges.findChanges.changedProjects_permissionChecker'])
    jobs:
      - template: libs/permission-checker/azure-pipelines.tests.yml

  - stage: tests_staging_provider
    displayName: Tests - Staging Provider
    lockBehavior: sequential
    dependsOn: build
    condition: and(succeeded(), dependencies.build.outputs['checkChanges.findChanges.changedProjects_stagingProvider'])
    jobs:
      - template: libs/staging-provider/azure-pipelines.tests.yml

  - stage: tests_configuration_variables_resolver
    displayName: Tests - Variables Resolver
    lockBehavior: sequential
    dependsOn: build
    condition: and(succeeded(), dependencies.build.outputs['checkChanges.findChanges.changedProjects_configurationVariablesResolver'])
    jobs:
      - template: libs/configuration-variables-resolver/azure-pipelines.tests.yml

  - stage: tests_settle
    displayName: Tests - Settle
    lockBehavior: sequential
    dependsOn: build
    condition: and(succeeded(), dependencies.build.outputs['checkChanges.findChanges.changedProjects_settle'])
    jobs:
      - template: libs/settle/azure-pipelines.tests.yml

  - stage: tests_api_bundle
    displayName: Tests - API Bundle
    lockBehavior: sequential
    dependsOn: build
    condition: and(succeeded(), dependencies.build.outputs['checkChanges.findChanges.changedProjects_apiBundle'])
    jobs:
      - template: libs/api-bundle/azure-pipelines.tests.yml

  - stage: testsResults
    displayName: Wait for tests results
    dependsOn:
      - tests_azureApiClient
      - tests_input_mapping
      - tests_k8sClient
      - tests_loggingBundle
      - tests_output_mapping
      - tests_permissionChecker
      - tests_staging_provider
      - tests_configuration_variables_resolver
      - tests_settle
      - tests_api_bundle
    condition: |
      and(
        in(dependencies.tests_azureApiClient.result, 'Succeeded', 'Skipped'),
        in(dependencies.tests_input_mapping.result, 'Succeeded', 'Skipped'),
        in(dependencies.tests_k8sClient.result, 'Succeeded', 'Skipped'),
        in(dependencies.tests_loggingBundle.result, 'Succeeded', 'Skipped'),
        in(dependencies.tests_output_mapping.result, 'Succeeded', 'Skipped'),
        in(dependencies.tests_permissionChecker.result, 'Succeeded', 'Skipped'),
        in(dependencies.tests_staging_provider.result, 'Succeeded', 'Skipped'),
        in(dependencies.tests_configuration_variables_resolver.result, 'Succeeded', 'Skipped'),
        in(dependencies.tests_settle.result, 'Succeeded', 'Skipped'),
        in(dependencies.tests_api_bundle.result, 'Succeeded', 'Skipped')
      )
    jobs:
      - job:
        steps:
          - script: echo "Tests passed"

  - stage: publishLibraries
    displayName: Publish Libraries
    dependsOn: [ build, testsResults ]
    condition: succeeded('testsResults')
    jobs:
      - template: azure-pipelines/jobs/split-library.yml
        parameters:
          condition: and(succeeded(), stageDependencies.build.checkChanges.outputs['findChanges.changedProjects_azureApiClient'])
          sourceRepo: platform-libraries
          targetRepo: azure-api-client
          libraryPath: libs/azure-api-client
          tagPrefix: azure-api-client/

      - template: azure-pipelines/jobs/split-library.yml
        parameters:
          condition: and(succeeded(), stageDependencies.build.checkChanges.outputs['findChanges.changedProjects_inputMapping'])
          sourceRepo: platform-libraries
          targetRepo: input-mapping
          libraryPath: libs/input-mapping
          tagPrefix: input-mapping/

      - template: azure-pipelines/jobs/split-library.yml
        parameters:
          condition: and(succeeded(), stageDependencies.build.checkChanges.outputs['findChanges.changedProjects_k8sClient'])
          sourceRepo: platform-libraries
          targetRepo: k8s-client
          libraryPath: libs/k8s-client
          tagPrefix: k8s-client/

      - template: azure-pipelines/jobs/split-library.yml
        parameters:
          condition: and(succeeded(), stageDependencies.build.checkChanges.outputs['findChanges.changedProjects_loggingBundle'])
          sourceRepo: platform-libraries
          targetRepo: logging-bundle
          libraryPath: libs/logging-bundle
          tagPrefix: logging-bundle/

      - template: azure-pipelines/jobs/split-library.yml
        parameters:
          condition: and(succeeded(), stageDependencies.build.checkChanges.outputs['findChanges.changedProjects_stagingProvider'])
          sourceRepo: platform-libraries
          targetRepo: staging-provider
          libraryPath: libs/staging-provider
          tagPrefix: staging-provider/

      - template: azure-pipelines/jobs/split-library.yml
        parameters:
          condition: and(succeeded(), stageDependencies.build.checkChanges.outputs['findChanges.changedProjects_outputMapping'])
          sourceRepo: platform-libraries
          targetRepo: output-mapping
          libraryPath: libs/output-mapping
          tagPrefix: output-mapping/

      - template: azure-pipelines/jobs/split-library.yml
        parameters:
          condition: and(succeeded(), stageDependencies.build.checkChanges.outputs['findChanges.changedProjects_permissionChecker'])
          sourceRepo: platform-libraries
          targetRepo: permission-checker
          libraryPath: libs/permission-checker
          tagPrefix: permission-checker/

      - template: azure-pipelines/jobs/split-library.yml
        parameters:
          condition: and(succeeded(), stageDependencies.build.checkChanges.outputs['findChanges.changedProjects_configurationVariablesResolver'])
          sourceRepo: platform-libraries
          targetRepo: configuration-variables-resolver
          libraryPath: libs/configuration-variables-resolver
          tagPrefix: configuration-variables-resolver/

      - template: azure-pipelines/jobs/split-library.yml
        parameters:
          condition: and(succeeded(), stageDependencies.build.checkChanges.outputs['findChanges.changedProjects_settle'])
          sourceRepo: platform-libraries
          targetRepo: settle
          libraryPath: libs/settle
          tagPrefix: settle/

      - template: azure-pipelines/jobs/split-library.yml
        parameters:
          condition: and(succeeded(), stageDependencies.build.checkChanges.outputs['findChanges.changedProjects_apiBundle'])
          sourceRepo: platform-libraries
          targetRepo: api-bundle
          libraryPath: libs/api-bundle
          tagPrefix: api-bundle/
